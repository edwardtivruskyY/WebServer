服务端与客户端交互时，时不时地会在解析请求中解析请求行的方法parseRequestLine中抛出数组下标
越界异常。实际上这是由于空请求原因导致的。
HTTP协议对此有说明，要求服务端应当忽略空请求。
所谓空请求指的是浏览器连接服务端后并没有发送一个请求过来，而仅仅发送了CRLF，相当于发送了一个
空行，对于这样的操作，服务端不应当处理它，而是直接和浏览器断开链接即可。

思路：
处理流客户端交互的工作是由ClientHandler控制的，而整个流程是在一个异常处理机制中的，
如果解析请求时HttpRequest的构造方法可以对外抛出空请求异常给ClientHandler，那么
ClientHandler则会直接跳到catch，这样等于忽略了后续的处理请求和响应客户端的工作。

实现：
1.在com.webserver.http包中新建一个自定义异常：EmptyRequestException
2.在HttpRequest的解析请求行方法ParseRequestLine中，当读取第一行字符串后判断，
  如果是空字符串则说明是空请求，直接抛出一个空请求异常。
3.此时HttpRequest的构造方法也继续声明对外抛出空请求异常。
4.这样一来，ClientHandler在实例化HttpRequest时就可能会抛出空请求异常了，对此，
  在ClientHandler的异常处理机制中添加一个catch单独捕获空请求，捕获后无需做任何
  操作，目的仅仅是抛出这个异常后忽略所有的操作。