上一个版本重构了响应的操作，本版本在这个基础上测试在页面上显示一张图片。

实现：
1.向webapps/myweb目录拷贝一张图片
2.在webapps/myweb/index.html页面中添加对应图片的显示
3.测试访问服务端该页面，查看图片是否能正确显示

通过上述操作，了解如下知识点：
1.页面上如何加载图片资源         <img src="">标签
2.页面上加载资源是制定的相对路径   <img src="./logo.jpg">资源路径
3.浏览器如何加载额外资源         自动再次发起请求去下载这个资源

1)
当页面中含有其他资源时，我们发现浏览器会自动发起多次请求来下载这些资源，下载完成后才能完整显示页面，例如
我们webapps/myweb/index.html页面。就是要发起两次请求，第一次获取这个页面，第二次获取页面上要显示的图片。
因此，我们的服务端不能只接收一次请求了，将WebServer类start方法中接收请求并启动线程处理的工作循环进行即可。


2)
在doc.canglaoshi.org上下载一套静态页面资源，例如学子商城，并解压缩后拷贝到webapps目录中，
测试请求其中的index.html页面会发现页面不能正常的完整显示。
经浏览器跟踪发现，毛病出在服务端响应浏览器请求的资源时，在响应头Content-Type中指示该资源的类型时是固定的
text/html，这导致浏览器无法正确理解其请求的资源，所以无法发挥该资源应有的效果，对此我们要对响应头进行重构。

这里做两个重构工作：
1.允许响应多个响应头(将来可以根据实际需要，设置多个不同的响应头，并都发送出去)，而不是固定的发送两个响应头
Content-Type和Content-Length
2.发送响应头Content-Type时要根据实际响应的资源的类型发送对应的值。

实现：
1.解决发送多个响应头的操作
在HttpResponse中定义一个Map，key保存响应头的名字，value保存响应头的值。将来需要发送什么
响应头，只需要在发送前将这个响应头的名字和值作为key、value保存到这个Map中即可。
然后修改sendHeaders方法，将原有的固定发送Content-Type和Content-Length改为遍历上述的
Map进行发送即可解决。